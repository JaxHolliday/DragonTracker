@using Microsoft.AspNetCore.Identity
@using DragonTracker.Services
@model DragonTracker.Models.ViewModels.DashboardViewModel
@inject UserManager<BTUser> UserManager
@inject IBTAccessService AccessService



@{
    ViewData["Title"] = "Dashboard";
    var userId = UserManager.GetUserId(User);
    var roleName = (await UserManager.GetRolesAsync(await UserManager.GetUserAsync(User))).FirstOrDefault();
}

@* Info Boxes *@
<div class="row">
    <div class="col-3">
        <div class="small-box bg-gradient-cyan">
            <div class="inner">
                <h3>@Model.Projects.Count</h3>

                <p>Total Projects</p>
            </div>
            <div class="icon">
                <i class="fas fa-book-open"></i>
            </div>
        </div>
    </div>
    <div class="col-3">
        <div class="small-box bg-gradient-primary">
            <div class="inner">
                <h3>@Model.Tickets.Count</h3>

                <p>Total Tickets</p>
            </div>
            <div class="icon">
                <i class="fas fa-ticket-alt"></i>
            </div>
        </div>
    </div>
    <div class="col-3">
        <div class="small-box bg-gradient-warning">
            <div class="inner">
                <h3>@Model.Tickets.Where(t => string.IsNullOrWhiteSpace(t.DeveloperUserId)).Count()</h3>

                <p>Unassigned Tickets</p>
            </div>
            <div class="icon">
                <i class="fas fa-user"></i>
            </div>
        </div>
    </div>
    <div class="col-3">
        <div class="small-box bg-danger">
            <div class="inner">
                <h3>@Model.Tickets.Where(t => t.TicketPriorityId == 1).Count()</h3>

                <p>Urgent Tickets</p>
            </div>
            <div class="icon">
                <i class="fas fa-exclamation"></i>
            </div>
        </div>
    </div>

</div>
@* info box end *@



<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col">
                <h1>Projects</h1>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<div class="wrapper">
    <div class="card card-primary">
        <div class="card-header">
            <h3 class="card-title">
                <i class="fas fa-book-open"></i>
                Projects
            </h3>
            <div class="card-tools">
                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                {

                    <a asp-action="Create" asp-controller="Projects" class="btn btn-success btn-sm">
                        <i class="fas fa-plus"></i>
                        Create Project
                    </a>

                }
                <button type="button" class="btn btn-tool" data-card-widget="maximize"><i class="fas fa-expand"></i></button>
                @*<button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                            <i class="fas fa-minus"></i>
                    </button>*@
            </div>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayName("Name")
                        </th>
                        <th>
                            @Html.DisplayName("Project Users")
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var project in Model.Projects)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => project.Name)
                            </td>
                            <td>
                                @foreach (var projectUser in project.Users)
                                {
                                    <h4>@projectUser.FullName</h4>
                                }
                            </td>
                            <td>
                                <a asp-action="Details" asp-route-id="@project.Id" asp-controller="Projects" class="btn btn-primary btn-sm">
                                    <i class="fas fa-folder">
                                    </i>
                                    View
                                </a>
                                <a asp-action="Delete" asp-route-id="@project.Id" asp-controller="Projects" class="btn btn-danger btn-sm">
                                    <i class="fas fa-trash">
                                    </i>
                                    Delete
                                </a>
                                @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager"))
                                {
                                    <a asp-action="AssignUsers" asp-route-id="@project.Id" asp-controller="Projects" class="btn btn-info btn-sm">
                                        <i class="fas fa-plus">
                                        </i>
                                        Add User
                                    </a>
                                    <a asp-action="RemoveUsers" asp-route-id="@project.Id" asp-controller="Projects" class="btn btn-info btn-sm">
                                        <i class="fas fa-minus">
                                        </i>
                                        Remove User
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<br />
<div class="card card-primary">
    <div class="card-header">
        <h3 class="card-title">
            <i class="fas fa-ticket-alt"></i>
            Ticket List
        </h3>
        <div class="card-tools">
            @if (User.IsInRole("Admin") || User.IsInRole("ProjectManager") || User.IsInRole("Developer"))
            {
                <a asp-action="Create" asp-controller="Tickets" class="btn btn-success btn-sm">
                    <i class="fas fa-plus"></i>
                    Create Ticket
                </a>
            }
            <button type="button" class="btn btn-tool" data-card-widget="collapse" data-toggle="tooltip" title="Collapse">
                <i class="fas fa-minus"></i>
            </button>
            <button type="button" class="btn btn-tool" data-card-widget="maximize"><i class="fas fa-expand"></i></button>
        </div>
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <table id="tckTble" class="table">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayName("Title")
                    </th>
                    <th>
                        @Html.DisplayName("Description")
                    </th>
                    <th>
                        @Html.DisplayName("Created")
                    </th>
                    <th>
                        @Html.DisplayName("Updated")
                    </th>
                    <th>
                        @Html.DisplayName("Project")
                    </th>
                    <th>
                        @Html.DisplayName("Ticket Type")
                    </th>
                    <th>
                        @Html.DisplayName("Ticket Priority")
                    </th>
                    <th>
                        @Html.DisplayName("Ticket Status")
                    </th>
                    <th>
                        @Html.DisplayName("Owner User")
                    </th>
                    <th>
                        @Html.DisplayName("Developer User")
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ticket in Model.Tickets)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.Created)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.Updated)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.Project.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.TicketType.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.TicketPriority.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.TicketStatus.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.OwnerUser.FullName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => ticket.DeveloperUser.FullName)
                        </td>
                        <td>
                            @if (await AccessService.CanInteractTicket(userId, ticket.Id, roleName))
                            {
                                <a asp-action="Details" asp-route-id="@ticket.Id" asp-controller="Tickets" class="btn btn-info btn-sm">
                                    <i class="fas fa-folder"></i>
                                    Details
                                </a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <!-- /.card-body -->
</div>

<div class="row">
    <div class="col-6">
        <!-- BAR CHART -->
        <div class="card card-info">
            <div class="card-header">
                <h3 class="card-title">Priority Chart</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="chart">
                    <canvas id="barChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                </div>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
    <div class="col-6">
        <!-- BAR CHART -->
        <div class="card card-info">
            <div class="card-header">
                <h3 class="card-title">Status Chart</h3>

                <div class="card-tools">
                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                        <i class="fas fa-minus"></i>
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="chart">
                    <canvas id="statusChart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                </div>
            </div>
            <!-- /.card-body -->
        </div>
        <!-- /.card -->
    </div>
</div>

@section scripts{

    @*  ChartJs *@
    <script>
            //Step 1 contruct URL to request data
            var Url1 = '@Url.Action("GetBarChartData", "Charts")';  //endpoint

            //step 2 - Start the structure for AJAX call
            $.post(Url1).then(function (response) {
                var ctx = document.getElementById('barChart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: response.labels,
                        datasets: [{
                            label: 'Priorities',
                            data: response.data,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            });
    </script>
    <script>
            //Step 1 contruct URL to request data
            var Url2 = '@Url.Action("GetStatusChartData", "Charts")';  //endpoint

            //step 2 - Start the structure for AJAX call
            $.post(Url2).then(function (response) {
                var ctx = document.getElementById('statusChart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: response.labels,
                        datasets: [{
                            label: 'Statuses',
                            data: response.data,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(255, 206, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(75, 192, 192, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            });
    </script>
}
